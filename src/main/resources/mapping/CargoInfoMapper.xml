<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jason.trade.mapper.CargoInfoMapper" >
  <resultMap id="BaseResultMap" type="com.jason.trade.model.CargoInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="boxes" property="boxes" jdbcType="INTEGER" />
    <result column="cargo_id" property="cargoId" jdbcType="VARCHAR" />
    <result column="cargo_name" property="cargoName" jdbcType="VARCHAR" />
    <result column="cargo_no" property="cargoNo" jdbcType="VARCHAR" />
    <result column="contract_amount" property="contractAmount" jdbcType="DOUBLE" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="contract_money" property="contractMoney" jdbcType="DOUBLE" />
    <result column="cost_price" property="costPrice" jdbcType="DOUBLE" />
    <result column="create_date_time" property="createDateTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="expect_store_boxes" property="expectStoreBoxes" jdbcType="INTEGER" />
    <result column="expect_store_weight" property="expectStoreWeight" jdbcType="DOUBLE" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="DOUBLE" />
    <result column="invoice_money" property="invoiceMoney" jdbcType="DOUBLE" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="real_store_boxes" property="realStoreBoxes" jdbcType="INTEGER" />
    <result column="real_store_money" property="realStoreMoney" jdbcType="DOUBLE" />
    <result column="real_store_weight" property="realStoreWeight" jdbcType="DOUBLE" />
    <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
    <result column="business_mode" property="businessMode" jdbcType="VARCHAR" />
    <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.jason.trade.entity.CargoManageInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="boxes" property="boxes" jdbcType="INTEGER" />
    <result column="cargo_id" property="cargoId" jdbcType="VARCHAR" />
    <result column="cargo_name" property="cargoName" jdbcType="VARCHAR" />
    <result column="cargo_no" property="cargoNo" jdbcType="VARCHAR" />
    <result column="contract_amount" property="contractAmount" jdbcType="DOUBLE" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="contract_money" property="contractMoney" jdbcType="DOUBLE" />
    <result column="cost_price" property="costPrice" jdbcType="DOUBLE" />
    <result column="create_date_time" property="createDateTime" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="eta" property="eta" jdbcType="VARCHAR" />
    <result column="etd" property="etd" jdbcType="VARCHAR" />
    <result column="expect_store_weight" property="expectStoreWeight" jdbcType="DOUBLE" />
    <result column="yys" property="yysWeight" jdbcType="DOUBLE" />
    <result column="destination_port" property="destinationPort" jdbcType="VARCHAR" />
    <result column="expect_store_boxes" property="expectStoreBoxes" jdbcType="INTEGER" />
    <result column="expect_store_weight" property="expectStoreWeight" jdbcType="DOUBLE" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="DOUBLE" />
    <result column="invoice_money" property="invoiceMoney" jdbcType="DOUBLE" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="real_store_boxes" property="realStoreBoxes" jdbcType="INTEGER" />
    <result column="real_store_money" property="realStoreMoney" jdbcType="DOUBLE" />
    <result column="real_store_weight" property="realStoreWeight" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="external_contract" property="contractNo" jdbcType="VARCHAR" />
    <result column="inside_contract" property="insideContract" jdbcType="VARCHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
    <result column="business_mode" property="businessMode" jdbcType="VARCHAR" />
    <result column="warehouse" property="warehouse" jdbcType="VARCHAR" />
    <result column="store_date" property="storeDate" jdbcType="VARCHAR" />
    <result column="storage_condition" property="storageCondition" jdbcType="VARCHAR" />
    <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
    <result column="external_company" property="externalCompany" jdbcType="VARCHAR" />
    <result column="origin_country" property="originCountry" jdbcType="VARCHAR" />
    <result column="container_no" property="containerNo" jdbcType="VARCHAR" />
    <result column="ladingbill_no" property="ladingbillNo" jdbcType="VARCHAR" />
    <result column="expect_sailing_date" property="expectSailingDate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, boxes, cargo_id, cargo_name, cargo_no, contract_amount, contract_id, contract_money, 
    cost_price, create_date_time, create_user, expect_store_boxes, expect_store_weight, 
    invoice_amount, invoice_money, level, real_store_boxes, real_store_money, real_store_weight, 
    unit_price, business_mode, company_no, status
  </sql>
  <select id="selectByCargoId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * from cargo_info where cargo_id = #{_parameter}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap2" parameterType="com.jason.trade.entity.CargoParam" >
    select b.* from (
    select a.*,b.external_company,b.origin_country,b.external_contract,b.inside_contract,b.warehouse,
    b.store_date,b.cargo_type,b.ladingbill_no,b.container_no,b.storage_condition
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5')
    UNION select a.*,'' as external_company,'' as origin_country,b.contract_no as external_contract,
    '' as inside_contract,'' as warehouse,'' as store_date,b.cargo_type,'' as ladingbill_no,
    '' as container_no,'' as storage_condition
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5') ) b
    where 1 = 1
    <include refid="selectByExampleWhere"></include>
    order by b.id desc
    limit ${start},${limit}
  </select>
  <sql id="selectByExampleWhere">
    <if test="externalCompany != null and externalCompany != '' and cmpRel == 1" >
      and b.external_company in (${externalCompany})
    </if>
    <if test="externalCompany != null and externalCompany != '' and cmpRel == 0" >
      and b.external_company not in (${externalCompany})
    </if>
    <if test="originCountry != null and originCountry != ''" >
      and b.origin_country in (${originCountry})
    </if>
    <if test="contractNo != null" >
      and b.external_contract like '%${contractNo}%'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and b.storage_condition = '${storageCondition}'
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and b.cargo_type = '${cargoType}'
    </if>
    <if test="ownerCompany != null and ownerCompany != ''" >
      and b.owner_company = '${ownerCompany}'
    </if>
    <if test="insideContract != null" >
      and b.inside_contract like '%${insideContract}%'
    </if>
    <if test="warehouse != null" >
      and b.warehouse like '%${warehouse}%'
    </if>
    <if test="ladingbillNo != null" >
      and b.ladingbill_no like '%${ladingbillNo}%'
    </if>
    <if test="containerNo != null" >
      and b.container_no like '%${containerNo}%'
    </if>
    <if test="storeStartDate != null and storeStartDate != ''" >
      and b.store_date &gt;= '${storeStartDate}'
    </if>
    <if test="storeEndDate != null and storeEndDate != ''" >
      and b.store_date &lt;= '${storeEndDate}'
    </if>
    <if test="level != null and level != ''" >
      and b.level like '%${level}%'
    </if>
    <if test="status != null and status != ''" >
      and b.status = '${status}'
    </if>
    <if test="businessMode != null and businessMode != ''" >
      and b.business_mode = '${businessMode}'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and b.cargo_name = '${cargoName}'
    </if>
    <if test="minBox != null and minBox != ''" >
      and b.real_store_boxes &gt;= '${minBox}'
    </if>
    <if test="maxBox != null and maxBox != ''" >
      and b.real_store_boxes &lt;= '${maxBox}'
    </if>
    <if test="cargoNo != null" >
      and b.cargo_no like '%${cargoNo}%'
    </if>
    <if test="companyNo != null" >
      and b.company_no like '%${companyNo}%'
    </if>
    <if test="minWeight != null and minWeight != ''" >
      and b.real_store_weight &gt;= '${minWeight}'
    </if>
    <if test="maxWeight != null and maxWeight != ''" >
      and b.real_store_weight &lt;= '${maxWeight}'
    </if>
    <if test="customerName != null and customerName != ''" >
      and b.cargo_id in (
      select cargo_id from sale_info where 1=1
      <if test="customerName != null and customerName != ''" >
        and customer_name like '%${customerName}%'
      </if>
      )
    </if>
  </sql>
  <select id="selectCountByExample" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select count(1) from (
    select a.*,b.external_company,b.origin_country,b.external_contract,b.inside_contract,b.warehouse,b.store_date,b.cargo_type,b.storage_condition,b.ladingbill_no,b.container_no from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5')
    UNION select a.*,'' as external_company,'' as origin_country,b.contract_no as external_contract,'' as inside_contract,'' as warehouse,'' as store_date,b.cargo_type,'' as storage_condition,'' as ladingbill_no,'' as container_no from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5') ) b
    where 1 = 1
    <include refid="selectByExampleWhere"></include>
  </select>
  <select id="selectTotalByExample" resultMap="BaseResultMap2" parameterType="com.jason.trade.entity.CargoParam" >
    select b.* from (
    select a.*,b.external_company,b.origin_country,b.external_contract,b.inside_contract,b.warehouse,b.store_date,b.cargo_type,b.storage_condition,b.ladingbill_no,b.container_no from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5')
    UNION select a.*,'' as external_company,'' as origin_country,b.contract_no as external_contract,'' as inside_contract,'' as warehouse,'' as store_date,b.cargo_type,'' AS storage_condition,'' as ladingbill_no,'' as container_no from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('4','5') ) b
    where 1 = 1
    <include refid="selectByExampleWhere"></include>
  </select>
  <select id="getTotalStoreWeightByExample" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(a.real_store_boxes)
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1 and a.status in ('4','5')
    <if test="contractId != null and contractId != ''" >
      and b.contract_id = '${contractId}'
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and b.cargo_type = '${cargoType}'
    </if>
    <if test="ownerCompany != null and ownerCompany != ''" >
      and b.owner_company = '${ownerCompany}'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and b.storage_condition = '${storageCondition}'
    </if>
    <if test="contractNo != null and contractNo != ''" >
      and b.external_contract like '%${contractNo}%'
    </if>
    <if test="insideContract != null and insideContract != ''" >
      and b.inside_contract like '%${insideContract}%'
    </if>
    <if test="warehouse != null and warehouse != ''" >
      and b.warehouse like '%${warehouse}%'
    </if>
    <if test="ladingbillNo != null" >
      and b.ladingbill_no like '%${ladingbillNo}%'
    </if>
    <if test="containerNo != null" >
      and b.container_no like '%${containerNo}%'
    </if>
    <if test="storeStartDate != null and storeStartDate != ''" >
      and b.store_date &gt;= '${storeStartDate}'
    </if>
    <if test="storeEndDate != null and storeEndDate != ''" >
      and b.store_date &lt;= '${storeEndDate}'
    </if>
    <if test="level != null and level != ''" >
      and a.level like '%${level}%'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and a.cargo_name = '${cargoName}'
    </if>
    <if test="cargoNo != null" >
      and a.cargo_no like '%${cargoNo}%'
    </if>
    <if test="minBox != null and minBox != ''" >
      and a.real_store_boxes &gt;= '${minBox}'
    </if>
    <if test="maxBox != null and maxBox != ''" >
      and a.real_store_boxes &lt;= '${maxBox}'
    </if>
    <if test="companyNo != null" >
      and b.company_no like '%${companyNo}%'
    </if>
    <if test="minWeight != null and minWeight != ''" >
      and b.real_store_weight &gt;= '${minWeight}'
    </if>
    <if test="maxWeight != null and maxWeight != ''" >
      and b.real_store_weight &lt;= '${maxWeight}'
    </if>
    <if test="customerName != null and customerName != ''" >
      and a.cargo_id in (
      select cargo_id from sale_info where 1=1
      <if test="customerName != null and customerName != ''" >
        and customer_name like '%${customerName}%'
      </if>
      )
    </if>
  </select>
  <select id="getTotalStoreBoxesByExample" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(a.real_store_boxes)
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1 and a.status in ('4','5')
    <if test="contractId != null and contractId != ''" >
      and b.contract_id = '${contractId}'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and b.storage_condition = '${storageCondition}'
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and b.cargo_type = '${cargoType}'
    </if>
    <if test="contractNo != null and contractNo != ''" >
      and b.external_contract like '%${contractNo}%'
    </if>
    <if test="ownerCompany != null and ownerCompany != ''" >
      and b.owner_company = '${ownerCompany}'
    </if>
    <if test="insideContract != null and insideContract != ''" >
      and b.inside_contract like '%${insideContract}%'
    </if>
    <if test="warehouse != null and warehouse != ''" >
      and b.warehouse like '%${warehouse}%'
    </if>
    <if test="ladingbillNo != null" >
      and b.ladingbill_no like '%${ladingbillNo}%'
    </if>
    <if test="containerNo != null" >
      and b.container_no like '%${containerNo}%'
    </if>
    <if test="storeStartDate != null and storeStartDate != ''" >
      and b.store_date &gt;= '${storeStartDate}'
    </if>
    <if test="storeEndDate != null and storeEndDate != ''" >
      and b.store_date &lt;= '${storeEndDate}'
    </if>
    <if test="level != null and level != ''" >
      and a.level like '%${level}%'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and a.cargo_name = '${cargoName}'
    </if>
    <if test="cargoNo != null" >
      and a.cargo_no like '%${cargoNo}%'
    </if>
    <if test="minBox != null and minBox != ''" >
      and a.real_store_boxes &gt;= '${minBox}'
    </if>
    <if test="maxBox != null and maxBox != ''" >
      and a.real_store_boxes &lt;= '${maxBox}'
    </if>
    <if test="customerName != null and customerName != ''" >
      and a.cargo_id in (
      select cargo_id from sale_info where 1=1
      <if test="customerName != null and customerName != ''" >
        and customer_name like '%${customerName}%'
      </if>
      )
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.jason.trade.model.CargoInfo" >
    update cargo_info
    <set >
      <if test="boxes != null" >
        boxes = #{boxes,jdbcType=INTEGER},
      </if>
      <if test="cargoId != null" >
        cargo_id = #{cargoId,jdbcType=VARCHAR},
      </if>
      <if test="cargoName != null" >
        cargo_name = #{cargoName,jdbcType=VARCHAR},
      </if>
      <if test="cargoNo != null" >
        cargo_no = #{cargoNo,jdbcType=VARCHAR},
      </if>
      <if test="contractAmount != null" >
        contract_amount = #{contractAmount,jdbcType=DOUBLE},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractMoney != null" >
        contract_money = #{contractMoney,jdbcType=DOUBLE},
      </if>
      <if test="costPrice != null" >
        cost_price = #{costPrice,jdbcType=DOUBLE},
      </if>
      <if test="createDateTime != null" >
        create_date_time = #{createDateTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="expectStoreBoxes != null" >
        expect_store_boxes = #{expectStoreBoxes,jdbcType=INTEGER},
      </if>
      <if test="expectStoreWeight != null" >
        expect_store_weight = #{expectStoreWeight,jdbcType=DOUBLE},
      </if>
      <if test="invoiceAmount != null" >
        invoice_amount = #{invoiceAmount,jdbcType=DOUBLE},
      </if>
      <if test="invoiceMoney != null" >
        invoice_money = #{invoiceMoney,jdbcType=DOUBLE},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="realStoreBoxes != null" >
        real_store_boxes = #{realStoreBoxes,jdbcType=INTEGER},
      </if>
      <if test="realStoreMoney != null" >
        real_store_money = #{realStoreMoney,jdbcType=DOUBLE},
      </if>
      <if test="realStoreWeight != null" >
        real_store_weight = #{realStoreWeight,jdbcType=DOUBLE},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="businessMode != null" >
        business_mode = #{businessMode,jdbcType=VARCHAR},
      </if>
      <if test="companyNo != null" >
        company_no = #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByCargoId" parameterType="com.jason.trade.model.CargoInfo" >
    update cargo_info
    <set >
      <if test="boxes != null" >
        boxes = #{boxes,jdbcType=INTEGER},
      </if>
      <if test="cargoId != null" >
        cargo_id = #{cargoId,jdbcType=VARCHAR},
      </if>
      <if test="cargoName != null" >
        cargo_name = #{cargoName,jdbcType=VARCHAR},
      </if>
      <if test="cargoNo != null" >
        cargo_no = #{cargoNo,jdbcType=VARCHAR},
      </if>
      <if test="contractAmount != null" >
        contract_amount = #{contractAmount,jdbcType=DOUBLE},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractMoney != null" >
        contract_money = #{contractMoney,jdbcType=DOUBLE},
      </if>
      <if test="costPrice != null" >
        cost_price = #{costPrice,jdbcType=DOUBLE},
      </if>
      <if test="createDateTime != null" >
        create_date_time = #{createDateTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="expectStoreBoxes != null" >
        expect_store_boxes = #{expectStoreBoxes,jdbcType=INTEGER},
      </if>
      <if test="expectStoreWeight != null" >
        expect_store_weight = #{expectStoreWeight,jdbcType=DOUBLE},
      </if>
      <if test="invoiceAmount != null" >
        invoice_amount = #{invoiceAmount,jdbcType=DOUBLE},
      </if>
      <if test="invoiceMoney != null" >
        invoice_money = #{invoiceMoney,jdbcType=DOUBLE},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="realStoreBoxes != null" >
        real_store_boxes = #{realStoreBoxes,jdbcType=INTEGER},
      </if>
      <if test="realStoreMoney != null" >
        real_store_money = #{realStoreMoney,jdbcType=DOUBLE},
      </if>
      <if test="realStoreWeight != null" >
        real_store_weight = #{realStoreWeight,jdbcType=DOUBLE},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="businessMode != null" >
        business_mode = #{businessMode,jdbcType=VARCHAR},
      </if>
      <if test="companyNo != null" >
        company_no = #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where cargo_id = #{cargoId,jdbcType=VARCHAR}
  </update>
  <delete id="deleteByContract" parameterType="java.util.List" >
    delete from cargo_info where contract_id in (
    select contract_id from contract_base_info where id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    )
  </delete>
  <update id="storeByContractId" parameterType="java.lang.String" >
    update cargo_info set status = 4
    where contract_id = #{contractId,jdbcType=VARCHAR} and status != 5
  </update>
  <update id="updateStatusByContractId" parameterType="java.lang.String" >
    update cargo_info set status = #{status,jdbcType=VARCHAR}
    where contract_id = #{contractId,jdbcType=VARCHAR} and status != 5
  </update>
  <update id="selloutByCargoId" parameterType="java.lang.String" >
    update cargo_info set status = 5
    where cargo_id = #{cargoId,jdbcType=VARCHAR}
  </update>
  <update id="storeByCargoId" parameterType="java.lang.String" >
    update cargo_info set status = 4
    where cargo_id = #{cargoId,jdbcType=VARCHAR}
  </update>
  <select id="findByGroupEqualsAndFieldEqualsOrderByNameAsc" resultType="com.jason.trade.model.OptionInfo">
    select distinct `name`,`group`,`field` from option_info
    where `group` = #{group,jdbcType=VARCHAR} and `field` = #{field,jdbcType=VARCHAR}
    order by `name` asc
  </select>





  <select id="getInternalTotalStoreWeightByExample" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(a.real_store_boxes)
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id
    where 1=1 and a.status in ('4','5')
    <if test="contractNo != null and contractNo != ''" >
      and b.contract_no like '%${contractNo}%'
    </if>
    <if test="importContractNo != null and importContractNo != ''" >
      and b.import_contract_no like '%${importContractNo}%'
    </if>
    <if test="contractStartDate != null and contractStartDate != ''" >
      and b.contract_date &gt;= '${contractStartDate}'
    </if>
    <if test="contractEndDate != null and contractEndDate != ''" >
      and b.contract_date &lt;= '${contractEndDate}'
    </if>
  </select>
  <select id="getInternalTotalStoreBoxesByExample" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(a.real_store_boxes)
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id
    where 1=1 and a.status in ('4','5')
    <if test="contractId != null and contractId != ''" >
      and b.contract_id = '${contractId}'
    </if>
    <if test="contractNo != null and contractNo != ''" >
      and b.contract_no like '%${contractNo}%'
    </if>
    <if test="importContractNo != null and importContractNo != ''" >
      and b.import_contract_no like '%${importContractNo}%'
    </if>
    <if test="contractStartDate != null and contractStartDate != ''" >
      and b.contract_date &gt;= '${contractStartDate}'
    </if>
    <if test="contractEndDate != null and contractEndDate != ''" >
      and b.contract_date &lt;= '${contractEndDate}'
    </if>
  </select>



  <select id="getSellList" resultType="com.jason.trade.entity.CargoSellInfo" parameterType="com.jason.trade.entity.CargoParam">
    select c.inside_contract,c.external_company,b.company_no,b.cargo_name,b.level,c.warehouse,b.cargo_no,
    b.unit_price,b.real_store_weight,b.real_store_money,c.container_no,c.ladingbill_no,a.kaifapiao,
    a.real_sale_date,a.customer_name,a.real_sale_weight,a.real_sale_boxes,a.real_sale_unit_price,a.real_sale_money,
    a.deposit,(a.customer_pay_money+a.customer_pay_money2+a.customer_pay_money3+a.customer_pay_money4+a.customer_pay_money5) as customer_pay_money,a.profit,b.cost_price
    from cargo_info b
    inner join sale_info a on a.cargo_id = b.cargo_id
    inner join contract_base_info c on c.contract_id = b.contract_id
    where 1=1
    <include refid="sellListWhere"></include>
    order by a.real_sale_date desc
    <if test="limit > 0">
    limit ${start},${limit}
    </if>
  </select>
  <sql id="sellListWhere">
    <if test="contractNo != null and contractNo != ''" >
      and c.external_contract like '%${contractNo}%'
    </if>
    <if test="insideContract != null and insideContract != ''" >
      and c.inside_contract like '%${insideContract}%'
    </if>
    <if test="containerNo != null" >
      and c.container_no like '%${containerNo}%'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and c.storage_condition = '${storageCondition}'
    </if>
    <if test="warehouse != null and warehouse != ''" >
      and c.warehouse like '%${warehouse}%'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and b.cargo_name = '${cargoName}'
    </if>
    <if test="level != null and level != ''" >
      and b.level like '%${level}%'
    </if>
    <if test="customerName != null and customerName != ''" >
      <!--and b.cargo_id in (
      select cargo_id from sale_info where 1=1
      <if test="customerName != null and customerName != ''" >
        and customer_name like '%${customerName}%'
      </if>
      )-->
      and a.customer_name like '%${customerName}%'
    </if>
    <if test="cargoNo != null" >
      and b.cargo_no like '%${cargoNo}%'
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and c.cargo_type = '${cargoType}'
    </if>
    <if test="ladingbillNo != null" >
      and c.ladingbill_no like '%${ladingbillNo}%'
    </if>
    and c.status in (4,5)
    <if test="status != null and status != ''" >
      and c.status = '${status}'
    </if>
    <if test="ownerCompany != null and ownerCompany != ''" >
      and c.owner_company = #{ownerCompany}
    </if>
    <if test="kaifapiao != null and kaifapiao != ''" >
      and a.kaifapiao = '${kaifapiao}'
    </if>
    <if test="businessMode != null and businessMode != ''" >
      and b.business_mode = '${businessMode}'
    </if>
    <if test="minBox != null and minBox != ''" >
      and b.real_store_boxes &gt;= '${minBox}'
    </if>
    <if test="maxBox != null and maxBox != ''" >
      and b.real_store_boxes &lt;= '${maxBox}'
    </if>
    <if test="pickupDateStart != null and pickupDateStart != ''" >
      and a.pickup_date &gt;= '${pickupDateStart}'
    </if>
    <if test="pickupDateEnd != null and pickupDateEnd != ''" >
      and a.pickup_date &lt;= '${pickupDateEnd}'
    </if>
    <if test="realSaleDateStart != null and realSaleDateStart != ''" >
      and a.real_sale_date &gt;= '${realSaleDateStart}'
    </if>
    <if test="realSaleDateEnd != null and realSaleDateEnd != ''" >
      and a.real_sale_date &lt;= '${realSaleDateEnd}'
    </if>
  </sql>
  <select id="countSellList" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam">
    select count(1) from cargo_info b
    inner join sale_info a on a.cargo_id = b.cargo_id
    inner join contract_base_info c on c.contract_id = b.contract_id
    where 1=1
    <include refid="sellListWhere"></include>
  </select>
  <select id="getTotalStoreInfoForQuery" resultType="com.jason.trade.entity.CargoTotalInfo" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(b.real_store_weight) as realStoreWeight,sum(b.real_store_money) as realStoreMoney,
    sum(a.real_sale_boxes) as realSaleBoxes,sum(a.profit) as profit,
    sum(a.real_sale_weight) as realSaleWeight,sum(a.real_sale_money) as realSaleMoney
    from cargo_info b
    inner join sale_info a on a.cargo_id = b.cargo_id
    inner join contract_base_info c on c.contract_id = b.contract_id
    where 1=1
    <include refid="sellListWhere"></include>
  </select>


  <select id="getStoreList" resultType="com.jason.trade.entity.CargoStoreInfo" parameterType="com.jason.trade.entity.CargoParam">
    select a.cargo_name,a.level,a.company_no,a.cargo_no,b.external_contract,b.inside_contract,
    b.container_no,b.ladingbill_no,b.store_date,b.warehouse,b.storage_condition,
    a.invoice_amount,a.boxes,b.baoguandan,b.qacertificate,b.jyzqfrq,b.bgdcjrq,b.eta
    from cargo_info a
    inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1
    <include refid="getStoreListWhere"></include>
    order by b.store_date desc,a.real_store_weight desc,a.real_store_boxes desc
    limit ${start},${limit}
  </select>
  <select id="getStoreList2" resultType="com.jason.trade.entity.CargoStoreInfo" parameterType="com.jason.trade.entity.CargoParam">
    select a.cargo_name,a.level,a.company_no,a.cargo_no,b.external_contract,b.inside_contract,
    b.container_no,b.ladingbill_no,b.store_date,b.warehouse,b.storage_condition,
    a.invoice_amount,a.boxes,b.baoguandan,b.qacertificate,b.jyzqfrq,b.bgdcjrq,b.eta
    from cargo_info a
    inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1
    <include refid="getStoreListWhere"></include>
    order by b.store_date desc,a.real_store_weight desc,a.real_store_boxes desc
  </select>
  <select id="countStoreList" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam">
    select count(1) from cargo_info a
    inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1
    <include refid="getStoreListWhere"></include>
  </select>
  <select id="getTotalStoreInInfo" resultType="com.jason.trade.entity.CargoTotalInfo" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(a.invoice_amount) as totalInvoiceWeight,sum(a.boxes) as totalInvoiceBoxes
    from cargo_info a
    inner join contract_base_info b on a.contract_id = b.contract_id
    where 1=1
    <include refid="getStoreListWhere"></include>
  </select>
  <select id="getAvgStatusByContractId" parameterType="java.lang.String" resultType="java.lang.Integer">
    select AVG(status) from cargo_info where contract_id = #{_parameter}
  </select>
  <select id="getLevelList" resultType="string">
    select DISTINCT level from cargo_info
  </select>


  <select id="selectByExampleForPre" resultMap="BaseResultMap2" parameterType="com.jason.trade.entity.CargoParam" >
    select b.* from (
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,b.eta,b.etd,b.storage_condition,b.owner_company,b.destination_port,b.origin_country,
    b.external_contract,b.inside_contract,b.warehouse,b.store_date,b.cargo_type,b.ladingbill_no,b.container_no,b.expect_sailing_date,b.external_company,c.expect_sale_date
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    inner join presale_info c on c.cargo_id = a.cargo_id where 1 = 1 and b.status in ('1','2','3')
    UNION
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,'' as eta,'' as etd,'' as storage_condition,b.owner_company,
    '' as destination_port,'' as origin_country,b.contract_no as external_contract,'' as inside_contract,'' as warehouse,
    '' as store_date,b.cargo_type,'' as ladingbill_no,'' as container_no,'' as expect_sailing_date,'' as external_company,'' as expect_sale_date
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('1','2','3')
    ) b
    where 1 = 1
    <include refid="selectByExampleForPreWhere"></include>
    order by b.id desc
    limit ${start},${limit}
  </select>
  <select id="selectCountByExampleForPre" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select count(1) from (
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,b.eta,b.etd,b.storage_condition,b.owner_company,b.destination_port,b.origin_country,
    b.external_contract,b.inside_contract,b.warehouse,b.store_date,b.cargo_type,b.ladingbill_no,b.container_no,b.expect_sailing_date,b.external_company,c.expect_sale_date
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    inner join presale_info c on c.cargo_id = a.cargo_id where 1 = 1 and b.status in ('1','2','3')
    UNION
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,'' as eta,'' as etd,'' as storage_condition,b.owner_company,
    '' as destination_port,'' as origin_country,b.contract_no as external_contract,'' as inside_contract,'' as warehouse,
    '' as store_date,b.cargo_type,'' as ladingbill_no,'' as container_no,'' as expect_sailing_date,'' as external_company,'' as expect_sale_date
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('1','2','3')
    ) b
    where 1 = 1
    <include refid="selectByExampleForPreWhere"></include>
  </select>
  <select id="selectTotalByExampleForPre" resultMap="BaseResultMap2" parameterType="com.jason.trade.entity.CargoParam" >
    select sum(b.yys) as yys,sum(b.expect_store_weight) as expect_store_weight,sum(b.contract_amount) as contract_amount from (
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,b.eta,b.etd,b.storage_condition,b.owner_company,b.destination_port,b.origin_country,
    b.external_contract,b.inside_contract,b.warehouse,b.store_date,b.cargo_type,b.ladingbill_no,b.container_no,b.expect_sailing_date,b.external_company,c.expect_sale_date
    from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    inner join presale_info c on c.cargo_id = a.cargo_id where 1 = 1 and b.status in ('1','2','3')
    UNION
    select (a.contract_amount-a.expect_store_weight) as yys,a.*,'' as eta,'' as etd,'' as storage_condition,b.owner_company,
    '' as destination_port,'' as origin_country,b.contract_no as external_contract,'' as inside_contract,'' as warehouse,
    '' as store_date,b.cargo_type,'' as ladingbill_no,'' as container_no,'' as expect_sailing_date,'' as external_company,'' as expect_sale_date
    from cargo_info a inner join internal_contract_info b on a.contract_id = b.contract_id where 1 = 1 and b.status in ('1','2','3')
    ) b
    where 1 = 1
    <include refid="selectByExampleForPreWhere"></include>
  </select>
  <sql id="selectByExampleForPreWhere">
    <if test="contractNo != null" >
      and b.external_contract like '%${contractNo}%'
    </if>
    <if test="insideContract != null" >
      and b.inside_contract like '%${insideContract}%'
    </if>
    <if test="cargoNo != null" >
      and b.cargo_no like '%${cargoNo}%'
    </if>
    <if test="customerName != null and customerName != ''" >
      and b.cargo_id in (
      select cargo_id from sale_info where 1=1
      <if test="customerName != null and customerName != ''" >
        and customer_name like '%${customerName}%'
      </if>
      )
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and b.cargo_type = '${cargoType}'
    </if>
    <if test="externalCompany != null and externalCompany != '' and cmpRel == 1" >
      and b.external_company in (${externalCompany})
    </if>
    <if test="externalCompany != null and externalCompany != '' and cmpRel == 0" >
      and b.external_company not in (${externalCompany})
    </if>
    <if test="originCountry != null and originCountry != ''" >
      and b.origin_country in (${originCountry})
    </if>
    <if test="destinationPort != null and destinationPort != ''" >
      and b.destination_port in (${destinationPort})
    </if>
    <if test="level != null and level != ''" >
      and b.level like '%${level}%'
    </if>
    <if test="businessMode != null and businessMode != ''" >
      and b.business_mode = '${businessMode}'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and b.cargo_name = '${cargoName}'
    </if>
    <if test="companyNo != null" >
      and b.company_no like '%${companyNo}%'
    </if>
    and b.status in (1,2,3)
    <if test="status != null and status != ''" >
      and b.status = '${status}'
    </if>
    <if test="ownerCompany != null and ownerCompany != ''" >
      and b.owner_company = '${ownerCompany}'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and b.storage_condition = '${storageCondition}'
    </if>
    <if test="expectSaleDateStart != null and expectSaleDateStart != ''" >
      and b.expect_sale_date &gt;= '${expectSaleDateStart}'
    </if>
    <if test="expectSaleDateEnd != null and expectSaleDateEnd != ''" >
      and b.expect_sale_date &lt;= '${expectSaleDateEnd}'
    </if>
    <if test="etaStartDate != null and etaStartDate != ''" >
      and b.eta &gt;= '${etaStartDate}'
    </if>
    <if test="etaEndDate != null and etaEndDate != ''" >
      and b.eta &lt;= '${etaEndDate}'
    </if>
    <if test="etdStartDate != null and etdStartDate != ''" >
      and b.etd &gt;= '${etdStartDate}'
    </if>
    <if test="etdEndDate != null and etdEndDate != ''" >
      and b.etd &lt;= '${etdEndDate}'
    </if>
    <if test="contractStartDate != null and contractStartDate != ''" >
      and b.contract_date &gt;= '${contractStartDate}'
    </if>
    <if test="contractEndDate != null and contractEndDate != ''" >
      and b.contract_date &lt;= '${contractEndDate}'
    </if>
    <if test="minWeight != null and minWeight != ''" >
      and b.expect_store_weight &gt;= '${minWeight}'
    </if>
    <if test="maxWeight != null and maxWeight != ''" >
      and b.expect_store_weight &lt;= '${maxWeight}'
    </if>
  </sql>
  <sql id="getStoreListWhere">
    <if test="contractNo != null and contractNo != ''" >
      and b.external_contract like '%${contractNo}%'
    </if>
    <if test="insideContract != null and insideContract != ''" >
      and b.inside_contract like '%${insideContract}%'
    </if>
    <if test="storageCondition != null and storageCondition != ''" >
      and b.storage_condition = '${storageCondition}'
    </if>
    <if test="warehouse != null and warehouse != ''" >
      and b.warehouse like '%${warehouse}%'
    </if>
    <if test="ladingbillNo != null" >
      and b.ladingbill_no like '%${ladingbillNo}%'
    </if>
    <if test="containerNo != null" >
      and b.container_no like '%${containerNo}%'
    </if>
    <if test="storeStartDate != null and storeStartDate != ''" >
      and b.store_date &gt;= '${storeStartDate}'
    </if>
    <if test="storeEndDate != null and storeEndDate != ''" >
      and b.store_date &lt;= '${storeEndDate}'
    </if>
    <if test="etaStartDate != null and etaStartDate != ''" >
      and b.eta &gt;= '${etaStartDate}'
    </if>
    <if test="etaEndDate != null and etaEndDate != ''" >
      and b.eta &lt;= '${etaEndDate}'
    </if>
    <if test="level != null and level != ''" >
      and a.level like '%${level}%'
    </if>
    <if test="status != null and status != ''" >
      and a.status = '${status}'
    </if>
    <if test="cargoName != null and cargoName != ''" >
      and a.cargo_name = '${cargoName}'
    </if>
    <if test="cargoNo != null" >
      and a.cargo_no like '%${cargoNo}%'
    </if>
    <if test="cargoType != null and cargoType != ''" >
      and b.cargo_type = '${cargoType}'
    </if>
    <if test="companyNo != null" >
      and a.company_no like '%${companyNo}%'
    </if>
    <if test="baoguandan != null and baoguandan != ''" >
      and b.baoguandan = '${baoguandan}'
    </if>
    <if test="qacertificate != null and qacertificate != ''" >
      and b.qacertificate = '${qacertificate}'
    </if>
  </sql>
  <select id="countCargoByContractId" resultType="java.lang.Integer" parameterType="com.jason.trade.entity.CargoParam" >
    select count(1) from cargo_info a inner join contract_base_info b on a.contract_id = b.contract_id
    where 1 = 1
    <if test="contractId != null and contractId != ''" >
      and b.contract_id = '${contractId}'
    </if>
  </select>
</mapper>